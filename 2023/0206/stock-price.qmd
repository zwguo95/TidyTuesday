---
title: "Tech Company Stock Prices"
format: html
editor: visual
---

# Data cleaning

```{r,message=FALSE}
library(MetBrewer)
library(showtext)
library(lubridate)
library(tidyverse)

big_tech_stock_prices <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-07/big_tech_stock_prices.csv')
big_tech_companies <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-07/big_tech_companies.csv')
```

```{r}
big_tech <- c("AAPL", "MSFT", "GOOGL", "NVDA", "AMZN", "META")
data <- big_tech_stock_prices %>%
  select(stock_symbol, date, adj_close) %>%
  filter((stock_symbol %in% big_tech) & (date >= "2020-12-01" & date <= "2022-12-31")) %>%
  mutate(year_quarter = as.Date(paste0(year(date),"-0", quarter(date),"-01"))) %>%
  group_by(year_quarter, stock_symbol) %>%
  summarise(cur_mean = mean(adj_close)) %>%
  ungroup() %>%
  group_by(stock_symbol) %>%
  mutate(lag_mean = dplyr::lag(cur_mean)) %>%
  ungroup() %>%
  filter(year_quarter != "2020-04-01") %>%
  mutate(return = (cur_mean - lag_mean)/lag_mean * 100) %>%
  group_by(year_quarter) %>%
  mutate(return_mean = mean(return)) %>%
  ungroup() %>%
  mutate(return_diff = return - return_mean) %>%
  arrange(year_quarter) %>%
  mutate(stock_index = row_number()) %>%
  group_by(year_quarter) %>%
  mutate(label_anchor = mean(stock_index)) %>%
  ungroup() %>%
  mutate(quarter = c(rep("Q1 2021", 6), rep("Q2 2021", 6), rep("Q3 2021", 6), rep("Q4 2021", 6),
                  rep("Q1 2022", 6), rep("Q2 2022", 6), rep("Q3 2022", 6), rep("Q4 2022", 6)))
```

# Theme for graphing

```{r}
font_add_google("Pragati Narrow")
showtext_auto()

theme_set(theme_minimal(base_family = "Pragati Narrow"))

theme_update(
  # legend
  legend.title = element_blank(),
  legend.position = 'bottom',
  legend.direction = 'horizontal',
  legend.key.width = unit(1.5, "cm"),
  legend.text = element_text(color = "black",  size=30),
  
  # axis
  axis.text.x = element_blank(),
  axis.text.y = element_text(size=25),
  #axis.text.y = element_blank()
  axis.ticks.length.y = unit(.1, "lines"),
  text = element_text(size = 30),
  
  # titles
  panel.grid = element_blank(),
  plot.margin = margin(15, 40, 15, 40),
  plot.background = element_rect(fill = "#f5f5f2", color = NA), 
  panel.background = element_rect(fill = "#f5f5f2", color = NA), 
  legend.title.align=1,
  plot.title = element_text(
    color = "black", 
    size = 70, 
    lineheight = 3,
    face = "bold",
    margin = margin(t = 10, b = 25, l = 0, r = 0),
    hjust = 0.5
  ),
  plot.title.position = "plot",
  plot.caption.position = "plot",
  plot.caption = element_text(
    color = "grey20", 
    size = 30,
    lineheight = 0.5, 
    hjust = 0.5,
    margin = margin(t = 40)))
```

## Graphing

```{r}
data %>%
ggplot(aes(x = stock_index, y = return)) + 
  geom_hline(
      data = tibble(y = seq(-30, 30, by = 10)),
      aes(yintercept = y),
      color = "grey70",
      size = .5
    ) +
  geom_segment(aes(xend = stock_index,
                   yend = return_mean,
                   color = stock_symbol),
               show.legend = F
    ) +
  scale_color_manual(values=met.brewer("Cross", 6),
                     breaks = c("AAPL", "MSFT", "GOOGL", "NVDA", "AMZN", "META"),
                     labels=c("Apple", "Microsoft", "Google", "Navidia", "Amazon", "Meta")) +
  scale_y_continuous(labels = function(x) paste0(x, "%"), breaks = seq(-35, 35, 10)) +
  geom_point(aes(color = stock_symbol)) + 
  geom_line(aes(x = stock_index, y = return_mean), color = "grey60", size = 1) +
  geom_label(aes(x = label_anchor, 37, label = quarter), fill = NA, size = 10, label.padding = unit(.5, "lines"),
    label.r = unit(.25, "lines"), color = "grey60") +
  labs(x = "", y = "Quarterly Stock Returns",
       title = "STOCK COLLAPSE OF BIG TECHS",
       caption = str_wrap("Data comes from Yahoo Finance via Kaggle, collected and shared by Evan Gower. This graph illustrates the relative stock performance of selected big techs compared to their average | Visualization by Zhaowen Guo", width = 300)) +
  guides(colour = guide_legend(nrow = 1, override.aes = list(size = 5)))  

# view the graph before saving
library(ggview)
ggview(width = 13, height = 13/1.168, units = "in")
ggsave("stock.png", width = width, height = width/1.618)
```
